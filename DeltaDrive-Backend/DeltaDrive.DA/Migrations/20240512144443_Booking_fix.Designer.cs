// <auto-generated />
using System;
using DeltaDrive.DA.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

#nullable disable

namespace DeltaDrive.DA.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240512144443_Booking_fix")]
    partial class Booking_fix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DeltaDrive.DA.Contracts.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<float?>("Latitude")
                        .HasColumnType("float");

                    b.Property<float?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DeltaDrive.DA.Contracts.Model.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsBooked")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<Point>("Location")
                        .HasColumnType("geometry");

                    b.Property<double>("PricePerKm")
                        .HasColumnType("double");

                    b.Property<float?>("Rating")
                        .HasColumnType("float");

                    b.Property<double>("StartPrice")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("DeltaDrive.DA.Contracts.Model.VehicleBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsAccepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleBookings");
                });

            modelBuilder.Entity("DeltaDrive.DA.Contracts.Model.VehicleBooking", b =>
                {
                    b.HasOne("DeltaDrive.DA.Contracts.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeltaDrive.DA.Contracts.Model.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DeltaDrive.DA.Contracts.Model.Location", "EndLocation", b1 =>
                        {
                            b1.Property<int>("VehicleBookingId")
                                .HasColumnType("int");

                            b1.Property<float>("Latitude")
                                .HasColumnType("float")
                                .HasColumnName("EndLatitude");

                            b1.Property<float>("Longitude")
                                .HasColumnType("float")
                                .HasColumnName("EndLongitude");

                            b1.HasKey("VehicleBookingId");

                            b1.ToTable("VehicleBookings");

                            b1.WithOwner()
                                .HasForeignKey("VehicleBookingId");
                        });

                    b.OwnsOne("DeltaDrive.DA.Contracts.Model.Location", "StartLocation", b1 =>
                        {
                            b1.Property<int>("VehicleBookingId")
                                .HasColumnType("int");

                            b1.Property<float>("Latitude")
                                .HasColumnType("float")
                                .HasColumnName("StartLatitude");

                            b1.Property<float>("Longitude")
                                .HasColumnType("float")
                                .HasColumnName("StartLongitude");

                            b1.HasKey("VehicleBookingId");

                            b1.ToTable("VehicleBookings");

                            b1.WithOwner()
                                .HasForeignKey("VehicleBookingId");
                        });

                    b.Navigation("EndLocation")
                        .IsRequired();

                    b.Navigation("StartLocation")
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
